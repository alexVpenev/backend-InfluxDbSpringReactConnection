
sudo docker stop (container name/////????/ id)
sudo docker start (docker name //// id)

docker build --build-arg JAR_FILE=build/libs/\*.jar -t springio/gs-spring-boot-docker .
docker run -p (2525/3636):8080 (name of docker container)

docker run --interactive --tty --name dockerTesting --publish 8082:8082 spring-boot-docker

testin new branch merge

after great fail 

current branch test docker on aws

----usefulCommands:--------
sudo docker pull postgres:alpine
sudo docker run --name testin -e POSTGRES_PASSWORD=asdasd -d -p 2222:2222 postgres:alpine
sudo docker exec -it testin bash
bash#./pwd/ls |
psql // psql -U name(postgres)
psql#./ \de || \d || create database (name/test) || \c (name/test) ...... \d(ls) 
-----
curl --request GET "http://localhost:2525/hello"

-----
*create docker container(from image)
sudo docker run --name (name) -e POSTGRES_PASSWORD=asdasd -d -p openPort:appPort postgres:alpine

*enter container
sudo docker exec -it postgres bash

*enter user
psql -U postgres(<- user)

	*in psql
		\du (show all users and rols/permissions)
		\d -name- (show contents of a table)
		\l (kinda like ls but for dbs)
		\d (find relations)
		\c (name of db) (connect to db for some unholy reason)
		\q (get out of database)
		
psql -h localhost(ip address) -p 5432 -U postgres(user)




runnnnnnnnnnnnnning